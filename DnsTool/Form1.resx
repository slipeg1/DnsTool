<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        woYAAAAASUVORK5CYII=
</value>
  </data>
</root>